## Note: 
This script is work in progress. For now it only contains the logic(!) to check a system
for various software versions and their vulnerability against spectre/meltdown. It is lacking
lots of version information for various hardware platforms, microcode versions etc. simply because
the version lists are huge and i only have access to a very limited number of distros, platforms
and processors.

Right now especially versions of applied microcode updates are of interest to me since the list of
processors having to be updated is huge. As of now i have no idea, wether an update to any E5 v3 Xeon
results in the same microcode version or if every Xeon-model (and there are 700+!) has its own
version, so every version helps.

FOR NOW it is assumed, that each Xeon family and version has the same microcode version. Meaning:

All Xeons E5xxxx v2 have the same version.
All Xeons E5xxxx v3 have the same version.
All Xeons E5xxxx v4 have the same version.
etc.

The same applies to Xeon E3xxxx and Xeon X3,X4,X5 (the latter not being versioned at all).

Please supply your version information if its not already in here. Either setup a PR or contact me
on slack or jabber, mail me at volker.schwicking@godaddy.com or mention me on any confluence article
or jira-issue.

For bugs see FAQ->I found  bug.
For improvements setup a PR or contact me.
For feature requests setup a PR or contact me.

# A script to check a server for up to date versions of bios, kernel, xen and microcode.

Supported Distros
==================
- Debian Wheezy
- Debian Jessie
- Debian Stretch
- Debian Sid
- RHEL6/CentOS
- RHEL7/CentOS

Supported hardware platforms
============================
 - Dell PowerEdge R2xx, R4xx, R5xx, R6xx, R7xx, R8xx (lacking bios versions!)
 - HP ProLiant DL1xx, DL3xx (lacking bios versions!)

 Look here for a complete list: https://stash.emea.godaddy.com:8443/projects/SAWH/repos/spectre_meltdown/browse/gather.py#70 

Other platforms can be added easily, see FAQ below.

Requirements:
=============
- Python2 (since it has to work on older distros that might not have 3)
- dmidecode utility
- ipmitool, only required on HP machines to retrieve bios version, dmidecode returns some other version
- intel-microcode (iucode-tool) if you run intel cpus, Debian has it in its repos, RPM is available here https://bugzilla.redhat.com/show_bug.cgi?id=1533490
- amd64-microcode if you run amd cpus (this is not fully implemented yet)

What does it do?
================
It does NOT change anything, it just collects data and analyzes it. No update is executed, no files created.

The first step is to collect system version information for bios, kernel, microcode and xen (if 
installed). The way the data is collected, varies depending on the distro. See all the _get_*()
functions on how thats done.

Please note that on Debian/Ubuntu 'uname -r' return the linux-package name (or something like that),
not the running kernel version! If you have a custom built kernel, that might differ and you can 
instruct the script to use one of the other kernel version sources with --kernel-version-source parameter.

Also note, that i have yet to find a way to get an AMDs processor current microcode version. Do you know how?

Once the data is collected, it is checked against known good versions. Good versions are compiled in
variables at the top.

KERNEL_VERSIONS - by distro, mainlines/LTS, custom versions supported in field 'Custom'
XEN_VERSIONS    - known to be safe xen versions, custom versions supported in field 'Custom'
BIOS_VERSIONS   - mapping from hardware platform to bios version, no custom versions supported
MC_CPU_MAP      - mapping from cpu to microcode version, no custom versions supported
INTEL_MCFILES   - Contains a listing of the microcode files supplied by intel, see comment for more info

See all the _check_*() functions on how versions are checked.

The default result is a colored output for each check: bios, kernel, microcode and xen. If you
require a different/parseable output, have a look t the --out parameter.

False means the checked version it too old or could not be checked.
True means the checked version is new enough and known to be safe.

If you want to know what is being checked exactly, try with -v or -d. The latter telling you pretty much
everything that is being run.

How do i use it?
================
Have a look at the help with 'gather.py -h' and adjust parameters as required. 
If your kernel version looks weird, try the '--use-uname-r' parameter.

The output can be customized to be parseable or readable: raw, json, short or colored

Todo
====
- Fully implement microcode check support. As of now it can only tell if an update is available.
- Extend version information list for bios, microcode, kernels and xen versions.
- What do you need?


FAQ
===
I found a bug!
Damn! Contact me or setup a PR :-) I always need the output of

$ cat /proc/cpuinfo
$ /bin/hostname
$ /bin/uname -r (yes seperately!)
$ /bin/uname -v (yes seperately!)
$ /bin/uname -a  (yes seperately!)
$ dmidecode -s system-product-name
$ dmidecode -s bios-version
$ dmidecode -s processor-version
$ ipmitool mc info
$ iucode-tool -S (if its an intel cpu and that area of the script is causing problems)

Why is my distro not supported?
I mainly have access to Debian-systems and a limited number of CPUs. Thats the info i can supply. The rest
has to be gathered by you to help others.

How can i add supported for my hardware platform?
Update the BIOS_VERSIONS dictionary with your information. The dictionaries key-name is the string returned by 'dmidecode -s system-product-name'.

How can i add supported for my processor and microcode version?
Update the MC_VERSIONS dictionary with your information. The processor name is taken from '/proc/cpuinfo'.

How can i add supported for my distro?
Update the KERNEL_VERSIONS dictionary with your distro and safe kernel-version information. The distro-name must match the name returned by _get_os_release().

How can i add safe xen-version?
Update XEN_VERSIONS with a known to be safe version string. _get_xen_version() uses the string from 'xl/xm info'.

The script fails with 'some error...'!
Please report to me directly or even better, fix it and setup a PR! :-)
